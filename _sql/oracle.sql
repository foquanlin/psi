-- 菜单
CREATE TABLE SYS_MENU (
  MENU_ID VARCHAR2(8) NOT NULL,
  PARENT_ID VARCHAR2(8) NOT NULL,
  NAME VARCHAR2(50),
  URL VARCHAR2(200),
  PERMS VARCHAR2(500),
  TYPE NUMBER(2, 0),
  ICON VARCHAR2(50),
  ORDER_NUM NUMBER(8, 0),
  PRIMARY KEY (MENU_ID)
);
---表注释：
COMMENT ON TABLE SYS_MENU IS '菜单管理';
---添加字段注释：
COMMENT ON COLUMN SYS_MENU.MENU_ID IS '菜单ID';
COMMENT ON COLUMN SYS_MENU.PARENT_ID IS '父菜单ID，一级菜单为0';
COMMENT ON COLUMN SYS_MENU.NAME IS '菜单名称';
COMMENT ON COLUMN SYS_MENU.URL IS '菜单URL';
COMMENT ON COLUMN SYS_MENU.PERMS IS '授权(多个用逗号分隔，如：USER:LIST,USER:CREATE)';
COMMENT ON COLUMN SYS_MENU.TYPE IS '类型   0：目录   1：菜单   2：按钮';
COMMENT ON COLUMN SYS_MENU.ICON IS '菜单图标';
COMMENT ON COLUMN SYS_MENU.ORDER_NUM IS '排序';

-- 系统用户
CREATE TABLE SYS_USER (
  USER_ID VARCHAR2(32) NOT NULL,
  USER_NAME VARCHAR2(50) NOT NULL,
  REAL_NAME VARCHAR2(64) NOT NULL,
  SEX NUMBER(2, 0) NOT NULL,
  ORG_NO VARCHAR2(50) NOT NULL,
  PASSWORD VARCHAR2(100),
  SALT VARCHAR2(20),
  EMAIL_HOST VARCHAR2(32),
  EMAIL VARCHAR2(100),
  EMAIL_PW VARCHAR2(64),
  MOBILE VARCHAR2(100),
  STATUS NUMBER(2, 0) NOT NULL,
  CREATE_USER_ID VARCHAR2(32) NOT NULL,
  CREATE_USER_ORG_NO VARCHAR2(32) NOT NULL,
  CREATE_TIME TIMESTAMP,
  PRIMARY KEY (USER_ID)
);
CREATE UNIQUE INDEX INDEX_SYS_USER_USER_NAME ON SYS_USER(USER_NAME);

---表注释：
COMMENT ON TABLE SYS_USER IS '系统用户';
---添加字段注释：
COMMENT ON COLUMN SYS_USER.USER_NAME IS '用户名';
COMMENT ON COLUMN SYS_USER.ORG_NO IS '机构编码';
COMMENT ON COLUMN SYS_USER.SALT IS '盐';
COMMENT ON COLUMN SYS_USER.EMAIL_HOST IS '邮件服务器地址';
COMMENT ON COLUMN SYS_USER.EMAIL IS '邮箱';
COMMENT ON COLUMN SYS_USER.EMAIL_PW IS '用户邮箱密码';
COMMENT ON COLUMN SYS_USER.MOBILE IS '手机号';
COMMENT ON COLUMN SYS_USER.STATUS IS '状态  0：禁用   1：正常';
COMMENT ON COLUMN SYS_USER.PASSWORD IS '密码';
COMMENT ON COLUMN SYS_USER.CREATE_USER_ID IS '创建者ID';
COMMENT ON COLUMN SYS_USER.CREATE_USER_ORG_NO IS '创建人所属机构';
COMMENT ON COLUMN SYS_USER.CREATE_TIME IS '创建时间';

---邮件发送记录
CREATE TABLE SYS_MAIL_LOG (
  ID VARCHAR2(32) NOT NULL,
  SENDER VARCHAR2(100) NOT NULL,
  RECEIVER VARCHAR2(4000) NOT NULL,
  SUBJECT VARCHAR2(500),
  CONTENT VARCHAR2(4000),
  SEND_DATE TIMESTAMP,
  TYPE NUMBER(2, 0),
  SEND_RESULT NUMBER(2, 0),
  CREATE_USER_ID VARCHAR2(32),
  CREATE_USER_ORG_NO VARCHAR2(32),
  PRIMARY KEY (ID)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='邮件发送日志';

---表注释：
COMMENT ON TABLE SYS_MAIL_LOG IS '邮件发送日志';
---添加字段注释：
COMMENT ON COLUMN SYS_MAIL_LOG.SENDER IS '发送人';
COMMENT ON COLUMN SYS_MAIL_LOG.RECEIVER IS '接收人';
COMMENT ON COLUMN SYS_MAIL_LOG.SUBJECT IS '邮件主题';
COMMENT ON COLUMN SYS_MAIL_LOG.CONTENT IS '发送内容';
COMMENT ON COLUMN SYS_MAIL_LOG.SEND_DATE IS '发送时间';
COMMENT ON COLUMN SYS_MAIL_LOG.TYPE IS '0：系统发送邮件 1：用户发送邮件';
COMMENT ON COLUMN SYS_MAIL_LOG.SEND_RESULT IS '发送结果 0:发送成功 1:发送失败';
COMMENT ON COLUMN SYS_MAIL_LOG.CREATE_USER_ID IS '创建者ID';
COMMENT ON COLUMN SYS_MAIL_LOG.CREATE_USER_ORG_NO IS '创建人所属机构';

-- 系统用户TOKEN
CREATE TABLE SYS_USER_TOKEN (
  USER_ID VARCHAR2(32) NOT NULL,
  TOKEN VARCHAR2(100) NOT NULL,
  EXPIRE_TIME TIMESTAMP,
  UPDATE_TIME TIMESTAMP,
  PRIMARY KEY (USER_ID)
);
CREATE UNIQUE INDEX INDEX_TOKEN ON SYS_USER_TOKEN(TOKEN);

---表注释：
COMMENT ON TABLE SYS_USER_TOKEN IS '系统用户Token';
---添加字段注释：
COMMENT ON COLUMN SYS_USER_TOKEN.TOKEN IS 'token';
COMMENT ON COLUMN SYS_USER_TOKEN.EXPIRE_TIME IS '过期时间';
COMMENT ON COLUMN SYS_USER_TOKEN.UPDATE_TIME IS '更新时间';

-- 系统验证码
CREATE TABLE SYS_CAPTCHA (
  UUID VARCHAR2(36) NOT NULL,
  CODE VARCHAR2(6) NOT NULL,
  EXPIRE_TIME TIMESTAMP,
  PRIMARY KEY (UUID)
);

---表注释：
COMMENT ON TABLE SYS_CAPTCHA IS '系统验证码';
---添加字段注释：
COMMENT ON COLUMN SYS_CAPTCHA.UUID IS 'uuid';
COMMENT ON COLUMN SYS_CAPTCHA.CODE IS '验证码';
COMMENT ON COLUMN SYS_CAPTCHA.EXPIRE_TIME IS '过期时间';

--数据字典
CREATE TABLE SYS_DICT (
  ID VARCHAR2(32) NOT NULL,
  GROUP_ID VARCHAR2(32) DEFAULT NULL,
  NAME VARCHAR2(100) DEFAULT NULL,
  VALUE VARCHAR2(64) DEFAULT NULL,
  SORT NUMBER(2, 0) DEFAULT 1,
  STATUS NUMBER(2, 0) DEFAULT 1,
  REMARK VARCHAR2(500),
  PRIMARY KEY (ID)
);

---表注释：
COMMENT ON TABLE SYS_DICT IS '数据字典';
---添加字段注释：
COMMENT ON COLUMN SYS_DICT.GROUP_ID IS '所属分组ID';
COMMENT ON COLUMN SYS_DICT.NAME IS '字典名称';
COMMENT ON COLUMN SYS_DICT.VALUE IS '字典值';
COMMENT ON COLUMN SYS_DICT.SORT IS '排序号';
COMMENT ON COLUMN SYS_DICT.STATUS IS '状态码';
COMMENT ON COLUMN SYS_DICT.REMARK IS '备注';

-- 数据字典组
CREATE TABLE SYS_DICT_GROUP (
  ID VARCHAR2(32) NOT NULL,
  CODE VARCHAR2(64) NOT NULL,
  NAME VARCHAR2(100) DEFAULT NULL,
  CREATE_TIME TIMESTAMP DEFAULT NULL,
  REMARK VARCHAR2(500),
  PRIMARY KEY (ID,CODE)
);

---表注释：
COMMENT ON TABLE SYS_DICT_GROUP IS '数据字典分组';
---添加字段注释：
COMMENT ON COLUMN SYS_DICT_GROUP.CODE IS '分组编码';
COMMENT ON COLUMN SYS_DICT_GROUP.NAME IS '分组名称';
COMMENT ON COLUMN SYS_DICT_GROUP.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN SYS_DICT_GROUP.REMARK IS '备注';

-- 组织机构
CREATE TABLE SYS_ORG (
  ORG_NO VARCHAR2(10) NOT NULL,
  ORG_NAME VARCHAR2(50) DEFAULT NULL,
  PARENT_NO VARCHAR2(10) DEFAULT NULL,
  ORG_TYPE NUMBER(11) DEFAULT NULL,
  STATUS NUMBER(2,0) DEFAULT 1,
  SORT NUMBER(4,0) DEFAULT NULL,
  CREATE_USER_ID VARCHAR2(32) DEFAULT NULL,
  CREATE_TIME TIMESTAMP DEFAULT NULL,
  PRIMARY KEY (ORG_NO)
);

---表注释：
COMMENT ON TABLE SYS_ORG IS '组织机构';
---添加字段注释：
COMMENT ON COLUMN SYS_ORG.ORG_NO IS '机构编码';
COMMENT ON COLUMN SYS_ORG.ORG_NAME IS '机构名称';
COMMENT ON COLUMN SYS_ORG.PARENT_NO IS '上级机构ID，一级机构为0';
COMMENT ON COLUMN SYS_ORG.ORG_TYPE IS '级别';
COMMENT ON COLUMN SYS_ORG.STATUS IS '状态  0：无效   1：有效';
COMMENT ON COLUMN SYS_ORG.SORT IS '排序';
COMMENT ON COLUMN SYS_ORG.CREATE_USER_ID IS '创建者ID';
COMMENT ON COLUMN SYS_ORG.CREATE_TIME IS '创建时间';

-- 角色
CREATE TABLE SYS_ROLE (
  ROLE_ID VARCHAR2(32) NOT NULL,
  ROLE_NAME VARCHAR2(100),
  REMARK VARCHAR2(500),
  CREATE_USER_ID VARCHAR2(32),
  CREATE_USER_ORG_NO VARCHAR2(32),
  CREATE_TIME TIMESTAMP,
  PRIMARY KEY (ROLE_ID)
);

---表注释：
COMMENT ON TABLE SYS_ROLE IS '角色';
---添加字段注释：
COMMENT ON COLUMN SYS_ROLE.ROLE_NAME IS '角色名称';
COMMENT ON COLUMN SYS_ROLE.REMARK IS '备注';
COMMENT ON COLUMN SYS_ROLE.CREATE_USER_ID IS '创建者ID';
COMMENT ON COLUMN SYS_ROLE.CREATE_USER_ORG_NO IS '创建者所属机构';
COMMENT ON COLUMN SYS_ROLE.CREATE_TIME IS '创建时间';

-- 用户与角色对应关系
CREATE TABLE SYS_USER_ROLE (
  ID VARCHAR2(32) NOT NULL,
  USER_ID VARCHAR2(32) NOT NULL,
  ROLE_ID VARCHAR2(32) NOT NULL,
  PRIMARY KEY (ID)
);

---表注释：
COMMENT ON TABLE SYS_USER_ROLE IS '用户与角色对应关系';
---添加字段注释：
COMMENT ON COLUMN SYS_USER_ROLE.USER_ID IS '用户ID';
COMMENT ON COLUMN SYS_USER_ROLE.ROLE_ID IS '角色ID';

-- 角色与菜单对应关系
CREATE TABLE SYS_ROLE_MENU (
  ID VARCHAR2(32) NOT NULL,
  ROLE_ID VARCHAR2(32),
  MENU_ID VARCHAR2(32),
  PRIMARY KEY (ID)
);

---表注释：
COMMENT ON TABLE SYS_ROLE_MENU IS '角色与菜单对应关系';
---添加字段注释：
COMMENT ON COLUMN SYS_ROLE_MENU.ROLE_ID IS '角色ID';
COMMENT ON COLUMN SYS_ROLE_MENU.MENU_ID IS '菜单ID';

-- 角色与机构对应关系
CREATE TABLE SYS_ROLE_ORG (
  ID VARCHAR2(32) NOT NULL,
  ROLE_ID VARCHAR2(32) DEFAULT NULL,
  ORG_NO VARCHAR2(32) DEFAULT NULL,
  PRIMARY KEY (ID)
);

---表注释：
COMMENT ON TABLE SYS_ROLE_ORG IS '角色与机构对应关系';
---添加字段注释：
COMMENT ON COLUMN SYS_ROLE_ORG.ROLE_ID IS '角色ID';
COMMENT ON COLUMN SYS_ROLE_ORG.ORG_NO IS '机构ID';


-- 系统配置信息
CREATE TABLE SYS_CONFIG (
  ID VARCHAR2(32) NOT NULL,
  PARAM_KEY VARCHAR2(50),
  PARAM_VALUE VARCHAR2(4000),
  STATUS NUMBER(2, 0) DEFAULT 1 NOT NULL,
  REMARK VARCHAR2(500),
  PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX INDEX_PARAM_KEY ON SYS_CONFIG(PARAM_KEY);

---表注释：
COMMENT ON TABLE SYS_CONFIG IS '系统配置信息表';
---添加字段注释：
COMMENT ON COLUMN SYS_CONFIG.PARAM_KEY IS 'key';
COMMENT ON COLUMN SYS_CONFIG.PARAM_VALUE IS 'value';
COMMENT ON COLUMN SYS_CONFIG.STATUS IS '状态   0：隐藏   1：显示';
COMMENT ON COLUMN SYS_CONFIG.REMARK IS '备注';


-- 系统日志
CREATE TABLE SYS_LOG (
  ID VARCHAR2(32) NOT NULL,
  USER_NAME VARCHAR2(50),
  OPERATION VARCHAR2(50),
  METHOD VARCHAR2(200),
  PARAMS CLOB,
  TIME NUMBER(20, 0) NOT NULL,
  IP VARCHAR2(64),
  CREATE_TIME TIMESTAMP,
  PRIMARY KEY (ID)
);

---表注释：
COMMENT ON TABLE SYS_LOG IS '系统日志';
---添加字段注释：
COMMENT ON COLUMN SYS_LOG.USER_NAME IS '用户名';
COMMENT ON COLUMN SYS_LOG.OPERATION IS '用户操作';
COMMENT ON COLUMN SYS_LOG.METHOD IS '请求方法';
COMMENT ON COLUMN SYS_LOG.PARAMS IS '请求参数';
COMMENT ON COLUMN SYS_LOG.TIME IS '执行时长(毫秒)';
COMMENT ON COLUMN SYS_LOG.IP IS 'IP地址';
COMMENT ON COLUMN SYS_LOG.CREATE_TIME IS '创建时间';

-- 文件上传
CREATE TABLE SYS_OSS (
  ID VARCHAR2(32) NOT NULL,
  URL VARCHAR2(200),
  CREATE_DATE TIMESTAMP,
  PRIMARY KEY (ID)
);

---表注释：
COMMENT ON TABLE SYS_OSS IS '文件上传';
---添加字段注释：
COMMENT ON COLUMN SYS_OSS.URL IS 'URL地址';
COMMENT ON COLUMN SYS_OSS.CREATE_DATE IS '创建时间';

-- 定时任务
CREATE TABLE SCHEDULE_JOB (
  JOB_ID VARCHAR2(32) NOT NULL,
  BEAN_NAME VARCHAR2(200),
  METHOD_NAME VARCHAR2(100),
  PARAMS VARCHAR2(2000),
  CRON_EXPRESSION VARCHAR2(100),
  STATUS NUMBER(2, 0) NOT NULL,
  REMARK VARCHAR2(255),
  CREATE_TIME TIMESTAMP,
  PRIMARY KEY (JOB_ID)
);

---表注释：
COMMENT ON TABLE SCHEDULE_JOB IS '定时任务';
---添加字段注释：
COMMENT ON COLUMN SCHEDULE_JOB.JOB_ID IS '任务id';
COMMENT ON COLUMN SCHEDULE_JOB.BEAN_NAME IS 'spring bean名称';
COMMENT ON COLUMN SCHEDULE_JOB.METHOD_NAME IS '方法名';
COMMENT ON COLUMN SCHEDULE_JOB.PARAMS IS '参数';
COMMENT ON COLUMN SCHEDULE_JOB.CRON_EXPRESSION IS 'cron表达式';
COMMENT ON COLUMN SCHEDULE_JOB.STATUS IS '任务状态  0：正常  1：暂停';
COMMENT ON COLUMN SCHEDULE_JOB.REMARK IS '备注';
COMMENT ON COLUMN SCHEDULE_JOB.CREATE_TIME IS '创建时间';

-- 定时任务日志
CREATE TABLE SCHEDULE_JOB_LOG (
  LOG_ID VARCHAR2(32) NOT NULL,
  JOB_ID VARCHAR2(32) NOT NULL,
  BEAN_NAME VARCHAR2(200),
  METHOD_NAME VARCHAR2(100),
  PARAMS VARCHAR2(2000),
  STATUS NUMBER(2, 0) NOT NULL,
  ERROR VARCHAR2(2000),
  TIMES NUMBER(10, 0) NOT NULL,
  CREATE_TIME TIMESTAMP,
  PRIMARY KEY (LOG_ID)
);
CREATE INDEX INDEX_JOB_ID ON SCHEDULE_JOB_LOG(JOB_ID);

---表注释：
COMMENT ON TABLE SCHEDULE_JOB_LOG IS '定时任务日志';
---添加字段注释：
COMMENT ON COLUMN SCHEDULE_JOB_LOG.LOG_ID IS '任务日志ID';
COMMENT ON COLUMN SCHEDULE_JOB_LOG.JOB_ID IS '任务id';
COMMENT ON COLUMN SCHEDULE_JOB_LOG.BEAN_NAME IS 'spring bean名';
COMMENT ON COLUMN SCHEDULE_JOB_LOG.METHOD_NAME IS '方法名';
COMMENT ON COLUMN SCHEDULE_JOB_LOG.PARAMS IS '参数';
COMMENT ON COLUMN SCHEDULE_JOB_LOG.STATUS IS '任务状态  0：正常  1：暂停';
COMMENT ON COLUMN SCHEDULE_JOB_LOG.ERROR IS '失败信息';
COMMENT ON COLUMN SCHEDULE_JOB_LOG.TIMES IS '耗时(单位：毫秒)';
COMMENT ON COLUMN SCHEDULE_JOB_LOG.CREATE_TIME IS '创建时间';


-- 用户表
CREATE TABLE TB_USER (
  USER_ID VARCHAR2(32) NOT NULL,
  USER_NAME VARCHAR2(50),
  SUBSCRIBE NUMBER(2, 0),
  SUBSCRIBE_TIME VARCHAR2(50),
  OPEN_ID VARCHAR2(100),
  NICKNAME VARCHAR2(200),
  HEAD_IMG_URL VARCHAR2(200),
  SEX NUMBER(2, 0),
  MOBILE VARCHAR2(20) NOT NULL,
  PASSWORD VARCHAR2(64),
  CREATE_TIME TIMESTAMP,
  PRIMARY KEY (USER_ID)
);
CREATE UNIQUE INDEX INDEX_TB_USER_USER_NAME ON TB_USER(USER_NAME);

---表注释：
COMMENT ON TABLE TB_USER IS '用户';
---添加字段注释：
COMMENT ON COLUMN TB_USER.USER_NAME IS '用户名';
COMMENT ON COLUMN TB_USER.SUBSCRIBE IS '关注状态（1是关注，0是未关注），未关注时获取不到其余信息';
COMMENT ON COLUMN TB_USER.SUBSCRIBE_TIME IS '用户关注时间，为时间戳。如果用户曾多次关注，则取最后关注时间';
COMMENT ON COLUMN TB_USER.OPEN_ID IS '用户的标识';
COMMENT ON COLUMN TB_USER.NICKNAME IS '微信昵称';
COMMENT ON COLUMN TB_USER.HEAD_IMG_URL IS '用户头像';
COMMENT ON COLUMN TB_USER.SEX IS '用户的性别（1是男性，2是女性，0是未知）';
COMMENT ON COLUMN TB_USER.MOBILE IS '手机号';
COMMENT ON COLUMN TB_USER.PASSWORD IS '密码';
COMMENT ON COLUMN TB_USER.CREATE_TIME IS '创建时间';

CREATE TABLE SYS_SMS_LOG (
  ID VARCHAR2(32) NOT NULL,
  USER_ID VARCHAR2(32) DEFAULT NULL,
  CONTENT CLOB,
  MOBILE CLOB,
  STIME TIMESTAMP DEFAULT NULL,
  SIGN VARCHAR2(32) DEFAULT NULL,
  TYPE VARCHAR2(32) DEFAULT NULL,
  EXTNO VARCHAR2(255) DEFAULT NULL,
  SEND_STATUS NUMBER(2, 0) ,
  SEND_ID VARCHAR2(32) DEFAULT NULL,
  INVALID_NUM NUMBER(8, 0) DEFAULT NULL,
  SUCCESS_NUM NUMBER(8, 0) DEFAULT NULL,
  BLACK_NUM NUMBER(8, 0) DEFAULT NULL,
  RETURN_MSG VARCHAR2(50) DEFAULT NULL,
  PRIMARY KEY (ID)
);

---表注释：
COMMENT ON TABLE SYS_SMS_LOG IS '短信发送日志';
---添加字段注释：
COMMENT ON COLUMN SYS_SMS_LOG.ID IS '主键';
COMMENT ON COLUMN SYS_SMS_LOG.USER_ID IS '操作人ID';
COMMENT ON COLUMN SYS_SMS_LOG.CONTENT IS '必填参数。发送内容（1-500 个汉字）UTF-8编码';
COMMENT ON COLUMN SYS_SMS_LOG.MOBILE IS '必填参数。手机号码。多个以英文逗号隔开';
COMMENT ON COLUMN SYS_SMS_LOG.STIME IS '可选参数。发送时间，填写时已填写的时间发送，不填时为当前时间发送';
COMMENT ON COLUMN SYS_SMS_LOG.SIGN IS '必填参数。用户签名';
COMMENT ON COLUMN SYS_SMS_LOG.TYPE IS '必填参数。固定值 pt';
COMMENT ON COLUMN SYS_SMS_LOG.EXTNO IS '可选参数。扩展码，用户定义扩展码，只能为数字';
COMMENT ON COLUMN SYS_SMS_LOG.SEND_STATUS IS '提交状态 0：成功';
COMMENT ON COLUMN SYS_SMS_LOG.SEND_ID IS '发送编号';
COMMENT ON COLUMN SYS_SMS_LOG.INVALID_NUM IS '无效号码数';
COMMENT ON COLUMN SYS_SMS_LOG.SUCCESS_NUM IS '成功提交数';
COMMENT ON COLUMN SYS_SMS_LOG.BLACK_NUM IS '黑名单数';
COMMENT ON COLUMN SYS_SMS_LOG.RETURN_MSG IS '返回消息';

--  QUARTZ自带表结构
CREATE TABLE QRTZ_JOB_DETAILS
(
  SCHED_NAME VARCHAR2(120) NOT NULL,
  JOB_NAME  VARCHAR2(200) NOT NULL,
  JOB_GROUP VARCHAR2(200) NOT NULL,
  DESCRIPTION VARCHAR2(250) NULL,
  JOB_CLASS_NAME   VARCHAR2(250) NOT NULL,
  IS_DURABLE VARCHAR2(1) NOT NULL,
  IS_NONCONCURRENT VARCHAR2(1) NOT NULL,
  IS_UPDATE_DATA VARCHAR2(1) NOT NULL,
  REQUESTS_RECOVERY VARCHAR2(1) NOT NULL,
  JOB_DATA BLOB NULL,
  CONSTRAINT QRTZ_JOB_DETAILS_PK PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
CREATE TABLE QRTZ_TRIGGERS
(
  SCHED_NAME VARCHAR2(120) NOT NULL,
  TRIGGER_NAME VARCHAR2(200) NOT NULL,
  TRIGGER_GROUP VARCHAR2(200) NOT NULL,
  JOB_NAME  VARCHAR2(200) NOT NULL,
  JOB_GROUP VARCHAR2(200) NOT NULL,
  DESCRIPTION VARCHAR2(250) NULL,
  NEXT_FIRE_TIME NUMBER(13) NULL,
  PREV_FIRE_TIME NUMBER(13) NULL,
  PRIORITY NUMBER(13) NULL,
  TRIGGER_STATE VARCHAR2(16) NOT NULL,
  TRIGGER_TYPE VARCHAR2(8) NOT NULL,
  START_TIME NUMBER(13) NOT NULL,
  END_TIME NUMBER(13) NULL,
  CALENDAR_NAME VARCHAR2(200) NULL,
  MISFIRE_INSTR NUMBER(2) NULL,
  JOB_DATA BLOB NULL,
  CONSTRAINT QRTZ_TRIGGERS_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
  CONSTRAINT QRTZ_TRIGGER_TO_JOBS_FK FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
  REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP)
);
CREATE TABLE QRTZ_SIMPLE_TRIGGERS
(
  SCHED_NAME VARCHAR2(120) NOT NULL,
  TRIGGER_NAME VARCHAR2(200) NOT NULL,
  TRIGGER_GROUP VARCHAR2(200) NOT NULL,
  REPEAT_COUNT NUMBER(7) NOT NULL,
  REPEAT_INTERVAL NUMBER(12) NOT NULL,
  TIMES_TRIGGERED NUMBER(10) NOT NULL,
  CONSTRAINT QRTZ_SIMPLE_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
  CONSTRAINT QRTZ_SIMPLE_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
  REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
CREATE TABLE QRTZ_CRON_TRIGGERS
(
  SCHED_NAME VARCHAR2(120) NOT NULL,
  TRIGGER_NAME VARCHAR2(200) NOT NULL,
  TRIGGER_GROUP VARCHAR2(200) NOT NULL,
  CRON_EXPRESSION VARCHAR2(120) NOT NULL,
  TIME_ZONE_ID VARCHAR2(80),
  CONSTRAINT QRTZ_CRON_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
  CONSTRAINT QRTZ_CRON_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
  REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
CREATE TABLE QRTZ_SIMPROP_TRIGGERS
(
  SCHED_NAME VARCHAR2(120) NOT NULL,
  TRIGGER_NAME VARCHAR2(200) NOT NULL,
  TRIGGER_GROUP VARCHAR2(200) NOT NULL,
  STR_PROP_1 VARCHAR2(512) NULL,
  STR_PROP_2 VARCHAR2(512) NULL,
  STR_PROP_3 VARCHAR2(512) NULL,
  INT_PROP_1 NUMBER(10) NULL,
  INT_PROP_2 NUMBER(10) NULL,
  LONG_PROP_1 NUMBER(13) NULL,
  LONG_PROP_2 NUMBER(13) NULL,
  DEC_PROP_1 NUMERIC(13,4) NULL,
  DEC_PROP_2 NUMERIC(13,4) NULL,
  BOOL_PROP_1 VARCHAR2(1) NULL,
  BOOL_PROP_2 VARCHAR2(1) NULL,
  CONSTRAINT QRTZ_SIMPROP_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
  CONSTRAINT QRTZ_SIMPROP_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
  REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
CREATE TABLE QRTZ_BLOB_TRIGGERS
(
  SCHED_NAME VARCHAR2(120) NOT NULL,
  TRIGGER_NAME VARCHAR2(200) NOT NULL,
  TRIGGER_GROUP VARCHAR2(200) NOT NULL,
  BLOB_DATA BLOB NULL,
  CONSTRAINT QRTZ_BLOB_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
  CONSTRAINT QRTZ_BLOB_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
  REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
CREATE TABLE QRTZ_CALENDARS
(
  SCHED_NAME VARCHAR2(120) NOT NULL,
  CALENDAR_NAME  VARCHAR2(200) NOT NULL,
  CALENDAR BLOB NOT NULL,
  CONSTRAINT QRTZ_CALENDARS_PK PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS
(
  SCHED_NAME VARCHAR2(120) NOT NULL,
  TRIGGER_GROUP  VARCHAR2(200) NOT NULL,
  CONSTRAINT QRTZ_PAUSED_TRIG_GRPS_PK PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
CREATE TABLE QRTZ_FIRED_TRIGGERS
(
  SCHED_NAME VARCHAR2(120) NOT NULL,
  ENTRY_ID VARCHAR2(95) NOT NULL,
  TRIGGER_NAME VARCHAR2(200) NOT NULL,
  TRIGGER_GROUP VARCHAR2(200) NOT NULL,
  INSTANCE_NAME VARCHAR2(200) NOT NULL,
  FIRED_TIME NUMBER(13) NOT NULL,
  SCHED_TIME NUMBER(13) NOT NULL,
  PRIORITY NUMBER(13) NOT NULL,
  STATE VARCHAR2(16) NOT NULL,
  JOB_NAME VARCHAR2(200) NULL,
  JOB_GROUP VARCHAR2(200) NULL,
  IS_NONCONCURRENT VARCHAR2(1) NULL,
  REQUESTS_RECOVERY VARCHAR2(1) NULL,
  CONSTRAINT QRTZ_FIRED_TRIGGER_PK PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
CREATE TABLE QRTZ_SCHEDULER_STATE
(
  SCHED_NAME VARCHAR2(120) NOT NULL,
  INSTANCE_NAME VARCHAR2(200) NOT NULL,
  LAST_CHECKIN_TIME NUMBER(13) NOT NULL,
  CHECKIN_INTERVAL NUMBER(13) NOT NULL,
  CONSTRAINT QRTZ_SCHEDULER_STATE_PK PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
CREATE TABLE QRTZ_LOCKS
(
  SCHED_NAME VARCHAR2(120) NOT NULL,
  LOCK_NAME  VARCHAR2(40) NOT NULL,
  CONSTRAINT QRTZ_LOCKS_PK PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);

CREATE INDEX IDX_QRTZ_J_REQ_RECOVERY ON QRTZ_JOB_DETAILS(SCHED_NAME,REQUESTS_RECOVERY);
CREATE INDEX IDX_QRTZ_J_GRP ON QRTZ_JOB_DETAILS(SCHED_NAME,JOB_GROUP);

CREATE INDEX IDX_QRTZ_T_J ON QRTZ_TRIGGERS(SCHED_NAME,JOB_NAME,JOB_GROUP);
CREATE INDEX IDX_QRTZ_T_JG ON QRTZ_TRIGGERS(SCHED_NAME,JOB_GROUP);
CREATE INDEX IDX_QRTZ_T_C ON QRTZ_TRIGGERS(SCHED_NAME,CALENDAR_NAME);
CREATE INDEX IDX_QRTZ_T_G ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_GROUP);
CREATE INDEX IDX_QRTZ_T_STATE ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_STATE);
CREATE INDEX IDX_QRTZ_T_N_STATE ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
CREATE INDEX IDX_QRTZ_T_N_G_STATE ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
CREATE INDEX IDX_QRTZ_T_NEXT_FIRE_TIME ON QRTZ_TRIGGERS(SCHED_NAME,NEXT_FIRE_TIME);
CREATE INDEX IDX_QRTZ_T_NFT_ST ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
CREATE INDEX IDX_QRTZ_T_NFT_MISFIRE ON QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE ON QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE_GRP ON QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);

CREATE INDEX IDX_QRTZ_FT_TRIG_INST_NAME ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,INSTANCE_NAME);
CREATE INDEX IDX_QRTZ_FT_INST_JOB_REQ_RCVRY ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
CREATE INDEX IDX_QRTZ_FT_J_G ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,JOB_NAME,JOB_GROUP);
CREATE INDEX IDX_QRTZ_FT_JG ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,JOB_GROUP);
CREATE INDEX IDX_QRTZ_FT_T_G ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
CREATE INDEX IDX_QRTZ_FT_TG ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,TRIGGER_GROUP);

--初始化数据
INSERT INTO SYS_ORG (ORG_NO, ORG_NAME, PARENT_NO, ORG_TYPE, STATUS, SORT, CREATE_USER_ID, CREATE_TIME) VALUES ('10', '安徽省', '0', 1, 1, 1, '1', TO_TIMESTAMP('2019-01-31 15:04:07.987000', 'YYYY-MM-DD HH24:MI:SS.FF6'));
INSERT INTO SYS_ORG (ORG_NO, ORG_NAME, PARENT_NO, ORG_TYPE, STATUS, SORT, CREATE_USER_ID, CREATE_TIME) VALUES ('1001', '合肥市', '10', 2, 1, 1, '1', TO_TIMESTAMP('2019-02-01 15:12:06.892000', 'YYYY-MM-DD HH24:MI:SS.FF6'));
INSERT INTO SYS_ORG (ORG_NO, ORG_NAME, PARENT_NO, ORG_TYPE, STATUS, SORT, CREATE_USER_ID, CREATE_TIME) VALUES ('1002', '阜阳市', '10', 2, 1, 2, '1', TO_TIMESTAMP('2019-02-01 15:12:23.328000', 'YYYY-MM-DD HH24:MI:SS.FF6'));
INSERT INTO SYS_ORG (ORG_NO, ORG_NAME, PARENT_NO, ORG_TYPE, STATUS, SORT, CREATE_USER_ID, CREATE_TIME) VALUES ('1003', '安庆市', '10', 2, 1, 3, '1', TO_TIMESTAMP('2019-02-01 15:12:43.807000', 'YYYY-MM-DD HH24:MI:SS.FF6'));
INSERT INTO SYS_ORG (ORG_NO, ORG_NAME, PARENT_NO, ORG_TYPE, STATUS, SORT, CREATE_USER_ID, CREATE_TIME) VALUES ('1004', '淮南市', '10', 2, 1, 4, '1', TO_TIMESTAMP('2019-02-01 15:13:00.703000', 'YYYY-MM-DD HH24:MI:SS.FF6'));
INSERT INTO SYS_ORG (ORG_NO, ORG_NAME, PARENT_NO, ORG_TYPE, STATUS, SORT, CREATE_USER_ID, CREATE_TIME) VALUES ('100101', '蜀山区', '1001', 3, 1, 1, '1', TO_TIMESTAMP('2019-02-01 15:13:30.873000', 'YYYY-MM-DD HH24:MI:SS.FF6'));
INSERT INTO SYS_ORG (ORG_NO, ORG_NAME, PARENT_NO, ORG_TYPE, STATUS, SORT, CREATE_USER_ID, CREATE_TIME) VALUES ('100102', '政务区', '1001', 3, 1, 2, '1', TO_TIMESTAMP('2019-02-01 15:13:46.637000', 'YYYY-MM-DD HH24:MI:SS.FF6'));
INSERT INTO SYS_ORG (ORG_NO, ORG_NAME, PARENT_NO, ORG_TYPE, STATUS, SORT, CREATE_USER_ID, CREATE_TIME) VALUES ('100201', '颍泉区', '1002', 3, 1, 1, '1', TO_TIMESTAMP('2019-02-01 15:14:02.608000', 'YYYY-MM-DD HH24:MI:SS.FF6'));
INSERT INTO SYS_ORG (ORG_NO, ORG_NAME, PARENT_NO, ORG_TYPE, STATUS, SORT, CREATE_USER_ID, CREATE_TIME) VALUES ('100202', '颍州区', '1002', 3, 1, 2, '1', TO_TIMESTAMP('2019-02-01 15:14:15.984000', 'YYYY-MM-DD HH24:MI:SS.FF6'));

INSERT INTO SYS_USER (USER_ID, USER_NAME, REAL_NAME, SEX, ORG_NO, PASSWORD, SALT, EMAIL_HOST, EMAIL, EMAIL_PW, MOBILE, STATUS, CREATE_USER_ID, CREATE_USER_ORG_NO, CREATE_TIME) VALUES ('1', 'admin', '李鹏军', 1, '01', '9ec9750e709431dad22365cabc5c625482e574c74adaebba7dd02f1129e4ce1d', 'YzcmCZNvbXocrsz9dm8e', 'smtp.qq.com', '939961241@qq.com', '', '15209831990', 1, '1', '0101', TO_TIMESTAMP('2019-01-24 15:44:49.000000', 'YYYY-MM-DD HH24:MI:SS.FF6'));

INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('10', '0', '系统管理', null, null, 0, 'system', 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('1001', '10', '菜单管理', 'sys/menu', 'sys:menu:list,sys:menu:info', 1, 'menu', 1);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('100101', '1001', '新增', null, 'sys:menu:save,sys:menu:select', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('100102', '1001', '修改', null, 'sys:menu:update,sys:menu:select', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('100103', '1001', '删除', null, 'sys:menu:delete', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('1002', '10', '组织机构', 'sys/org', 'sys:org:list,sys:org:info', 1, 'org', 2);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('100201', '1002', '新增', null, 'sys:org:save', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('100202', '1002', '修改', null, 'sys:org:update', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('100203', '1002', '删除', null, 'sys:org:delete', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('1003', '10', '系统参数', 'sys/config', 'sys:config:list,sys:config:info', 1, 'xitongpeizhi', 3);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('100301', '1003', '新增', null, 'sys:config:save', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('100302', '1003', '修改', null, 'sys:config:update', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('100303', '1003', '删除', null, 'sys:config:delete', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('1004', '10', '字典管理', 'sys/dictgroup', 'sys:dictgroup:list,sys:dictgroup:info,sys:dict:list,sys:dict:info', 1, 'dict', 4);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('100401', '1004', '数据字典新增', null, 'sys:dict:save', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('100402', '1004', '数据字典修改', null, 'sys:dict:update', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('100403', '1004', '数据字典删除', null, 'sys:dict:delete', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('100404', '1004', '数据字典分组新增', null, 'sys:dictgroup:save', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('100405', '1004', '数据字典分组修改', null, 'sys:dictgroup:update', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('100406', '1004', '数据字典分组删除', null, 'sys:dictgroup:delete', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('1005', '10', '文件上传', 'oss/oss', 'sys:oss:list', 1, 'oss', 5);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('100501', '1005', '云存储配置', null, 'sys:oss:config', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('100502', '1005', '上传文件', null, 'sys:oss:upload', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('100503', '1005', '删除', null, 'sys:oss:delete', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('1006', '10', '系统日志', 'sys/log', 'sys:log:list', 1, 'log', 6);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('11', '0', '权限管理', null, null, 0, 'auth', 1);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('1101', '11', '管理员列表', 'sys/user', 'sys:user:list,sys:user:info', 1, 'admin', 1);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('110101', '1101', '重置密码', null, 'sys:user:resetPw', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('110102', '1101', '新增', null, 'sys:user:save,sys:role:select', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('110103', '1101', '修改', null, 'sys:user:update,sys:role:select', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('110104', '1101', '删除', null, 'sys:user:delete', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('1102', '11', '角色管理', 'sys/role', 'sys:role:list,sys:role:info', 1, 'role', 2);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('110201', '1102', '新增', null, 'sys:role:save,sys:menu:list', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('110202', '1102', '修改', null, 'sys:role:update,sys:menu:list', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('110203', '1102', '删除', null, 'sys:role:delete', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('12', '0', '短信平台', null, null, 0, 'duanxinpingtai', 2);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('1211', '12', '短信配置', 'sys/smslog', 'sys:smslog:list', 1, 'duanxin', 1);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('121101', '1211', '修改配置', null, 'sys:smslog:config', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('121102', '1211', '删除', null, 'sys:smslog:delete', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('121103', '1211', '发送短信', null, 'sys:smslog:send', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('13', '0', '任务调度', null, null, 0, 'diaodu', 3);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('1301', '13', '定时任务', 'job/schedule', 'sys:schedule:list,sys:schedule:info', 1, 'job', 1);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('130101', '1301', '删除', null, 'sys:schedule:delete', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('130102', '1301', '暂停', null, 'sys:schedule:pause', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('130103', '1301', '恢复', null, 'sys:schedule:resume', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('130104', '1301', '立即执行', null, 'sys:schedule:run', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('130105', '1301', '日志列表', null, 'sys:schedule:log', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('130106', '1301', '新增', null, 'sys:schedule:save', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('130107', '1301', '修改', null, 'sys:schedule:update', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('14', '0', '工作流管理', null, null, 0, 'activiti', 4);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('1401', '14', '流程操作', 'act/reprocdef', 'act:reprocdef:list', 1, 'procdef', 1);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('140101', '1401', '激活,挂起', null, 'act:reprocdef:update', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('140102', '1401', '删除', null, 'act:reprocdef:delete', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('140103', '1401', '转为模型', null, 'act:reprocdef:convertToModel', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('140104', '1401', '部署流程', null, 'act:reprocdef:deploy', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('1402', '14', '模型管理', 'act/remodel', 'act:remodel:list', 1, 'model', 2);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('140201', '1402', '新增', null, 'act:remodel:save', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('140202', '1402', '编辑', null, 'act:remodel:update', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('140203', '1402', '部署', null, 'act:remodel:deploy', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('140204', '1402', '导出', null, 'act:remodel:export', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('140205', '1402', '删除', null, 'act:remodel:delete', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('15', '0', '开发工具', null, null, 0, 'dev', 5);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('1501', '15', '在线用户管理', 'sys/usertoken', 'sys:usertoken:list', 1, 'zaixian', 1);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('150101', '1501', '强制下线', null, 'sys:usertoken:offline', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('1502', '15', '缓存信息', 'sys/redis', 'sys:cache:queryAll', 1, 'redis', 2);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('150201', '1502', '删除', null, 'sys:cache:deleteCache', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('1503', '15', 'SQL监控', 'http://localhost:8888/platform-admin/druid/sql.html', null, 1, 'sql', 3);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('1504', '15', '接口文档', 'http://localhost:8889/platform-api/doc.html', null, 1, 'interface', 4);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('1505', '15', '代码生成器', 'gen/generator', 'sys:generator:list', 1, 'code', 5);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('150501', '1505', '生成代码', null, 'sys:generator:code', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('16', '0', '邮件系统', null, null, 0, 'email', 6);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('1601', '16', '发送记录', 'sys/maillog', 'sys:maillog:list,sys:maillog:info', 1, 'job', 1);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('160101', '1601', '删除', null, 'sys:maillog:delete', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('160102', '1601', '邮箱配置', null, 'sys:maillog:config', 2, null, 0);
INSERT INTO SYS_MENU (MENU_ID, PARENT_ID, NAME, URL, PERMS, TYPE, ICON, ORDER_NUM) VALUES ('17', '0', 'ELK平台', 'http://localhost:5601', null, '1', 'log', 7);

INSERT INTO SYS_CONFIG (ID, PARAM_KEY, PARAM_VALUE, STATUS, REMARK) VALUES ('1', 'CLOUD_STORAGE_CONFIG_KEY', '{"aliyunAccessKeyId":"","aliyunAccessKeySecret":"","aliyunBucketName":"","aliyunDomain":"","aliyunEndPoint":"","aliyunPrefix":"","qcloudBucketName":"","qcloudDomain":"","qcloudPrefix":"","qcloudSecretId":"","qcloudSecretKey":"","qiniuAccessKey":"NrgMfABZxWLo5B-YYSjoE8-AZ1EISdi1Z3ubLOeZ","qiniuBucketName":"ios-app","qiniuDomain":"http://7xlij2.com1.z0.glb.clouddn.com","qiniuPrefix":"upload","qiniuSecretKey":"uIwJHevMRWU0VLxFvgy0tAcOdGqasdtVlJkdy6vV","type":1}', 0, '云存储配置信息');
INSERT INTO SYS_CONFIG (ID, PARAM_KEY, PARAM_VALUE, STATUS, REMARK) VALUES ('2', 'SMS_CONFIG_KEY', '{\"domain\":\"http://web.cr6868.com/asmx/smsservice.aspx?\",\"name\":\"lipengjun\",\"pwd\":\"\",\"sign\":\"【微同工作室】\",\"type\":1}', 0, '短信配置');

INSERT INTO SYS_DICT_GROUP (ID, CODE, NAME, create_time, REMARK) VALUES ('467086f66e404456b7f51cd2e68eb3ef', 'SEX', '性别', sysdate,null);
INSERT INTO SYS_DICT (ID, GROUP_ID, NAME, VALUE, SORT, STATUS, create_time, REMARK) VALUES ('6e960c35a93b4544b05a8bff42c821f7', '467086f66e404456b7f51cd2e68eb3ef', '男', '1', 1, 1, sysdate, null);
INSERT INTO SYS_DICT (ID, GROUP_ID, NAME, VALUE, SORT, STATUS, create_time, REMARK) VALUES ('5258e31b7e3348eab093a884e78eb64f', '467086f66e404456b7f51cd2e68eb3ef', '女', '2', 2, 1, sysdate, null);
INSERT INTO SYS_DICT (ID, GROUP_ID, NAME, VALUE, SORT, STATUS, create_time, REMARK) VALUES ('9892d578e13e47c7afc5fe0817a690e3', '467086f66e404456b7f51cd2e68eb3ef', '未知', '3', 3, 1, sysdate, null);

-- 账号：15209831990  密码：admin
INSERT INTO TB_USER (USER_ID, USER_NAME, subscribe, subscribe_time, open_id, nickname, head_img_url, sex, mobile, password, create_time) VALUES ('1', '李鹏军', 1, '1550742648', 'oxaA11ulr9134oBL9Xscon5at_Gc', 'Boy Genius', 'http://thirdwx.qlogo.cn/mmopen/PiajxSqBRaEI3eTLaf64kP7sBrpXKbJ7l4h6BWOlJjAQUqibVbsKotVWbzH6QnkTHYmuTMZXuUiaXVo7Ba02XbCxA/132', 1, '15209831990', '8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918', TO_TIMESTAMP('2019-01-31 06:54:40.000000', 'YYYY-MM-DD HH24:MI:SS.FF6'));

-- Oracle 无法自动创建Activiti表
create table ACT_ID_GROUP (
    ID_ NVARCHAR2(64),
    REV_ INTEGER,
    NAME_ NVARCHAR2(255),
    TYPE_ NVARCHAR2(255),
    primary key (ID_)
);

create table ACT_ID_MEMBERSHIP (
    USER_ID_ NVARCHAR2(64),
    GROUP_ID_ NVARCHAR2(64),
    primary key (USER_ID_, GROUP_ID_)
);

create table ACT_ID_USER (
    ID_ NVARCHAR2(64),
    REV_ INTEGER,
    FIRST_ NVARCHAR2(255),
    LAST_ NVARCHAR2(255),
    EMAIL_ NVARCHAR2(255),
    PWD_ NVARCHAR2(255),
    PICTURE_ID_ NVARCHAR2(64),
    primary key (ID_)
);

create table ACT_ID_INFO (
    ID_ NVARCHAR2(64),
    REV_ INTEGER,
    USER_ID_ NVARCHAR2(64),
    TYPE_ NVARCHAR2(64),
    KEY_ NVARCHAR2(255),
    VALUE_ NVARCHAR2(255),
    PASSWORD_ BLOB,
    PARENT_ID_ NVARCHAR2(255),
    primary key (ID_)
);

create index ACT_IDX_MEMB_GROUP on ACT_ID_MEMBERSHIP(GROUP_ID_);
alter table ACT_ID_MEMBERSHIP
    add constraint ACT_FK_MEMB_GROUP
    foreign key (GROUP_ID_)
    references ACT_ID_GROUP (ID_);

create index ACT_IDX_MEMB_USER on ACT_ID_MEMBERSHIP(USER_ID_);
alter table ACT_ID_MEMBERSHIP
    add constraint ACT_FK_MEMB_USER
    foreign key (USER_ID_)
    references ACT_ID_USER (ID_);
create table ACT_HI_PROCINST (
    ID_ NVARCHAR2(64) not null,
    PROC_INST_ID_ NVARCHAR2(64) not null,
    BUSINESS_KEY_ NVARCHAR2(255),
    PROC_DEF_ID_ NVARCHAR2(64) not null,
    START_TIME_ TIMESTAMP(6) not null,
    END_TIME_ TIMESTAMP(6),
    DURATION_ NUMBER(19,0),
    START_USER_ID_ NVARCHAR2(255),
    START_ACT_ID_ NVARCHAR2(255),
    END_ACT_ID_ NVARCHAR2(255),
    SUPER_PROCESS_INSTANCE_ID_ NVARCHAR2(64),
    DELETE_REASON_ NVARCHAR2(2000),
    TENANT_ID_ NVARCHAR2(255) default '',
    NAME_ NVARCHAR2(255),
    primary key (ID_),
    unique (PROC_INST_ID_)
);

create table ACT_HI_ACTINST (
    ID_ NVARCHAR2(64) not null,
    PROC_DEF_ID_ NVARCHAR2(64) not null,
    PROC_INST_ID_ NVARCHAR2(64) not null,
    EXECUTION_ID_ NVARCHAR2(64) not null,
    ACT_ID_ NVARCHAR2(255) not null,
    TASK_ID_ NVARCHAR2(64),
    CALL_PROC_INST_ID_ NVARCHAR2(64),
    ACT_NAME_ NVARCHAR2(255),
    ACT_TYPE_ NVARCHAR2(255) not null,
    ASSIGNEE_ NVARCHAR2(255),
    START_TIME_ TIMESTAMP(6) not null,
    END_TIME_ TIMESTAMP(6),
    DURATION_ NUMBER(19,0),
    DELETE_REASON_ NVARCHAR2(2000),
    TENANT_ID_ NVARCHAR2(255) default '',
    primary key (ID_)
);

create table ACT_HI_TASKINST (
    ID_ NVARCHAR2(64) not null,
    PROC_DEF_ID_ NVARCHAR2(64),
    TASK_DEF_KEY_ NVARCHAR2(255),
    PROC_INST_ID_ NVARCHAR2(64),
    EXECUTION_ID_ NVARCHAR2(64),
    PARENT_TASK_ID_ NVARCHAR2(64),
    NAME_ NVARCHAR2(255),
    DESCRIPTION_ NVARCHAR2(2000),
    OWNER_ NVARCHAR2(255),
    ASSIGNEE_ NVARCHAR2(255),
    START_TIME_ TIMESTAMP(6) not null,
    CLAIM_TIME_ TIMESTAMP(6),
    END_TIME_ TIMESTAMP(6),
    DURATION_ NUMBER(19,0),
    DELETE_REASON_ NVARCHAR2(2000),
    PRIORITY_ INTEGER,
    DUE_DATE_ TIMESTAMP(6),
    FORM_KEY_ NVARCHAR2(255),
    CATEGORY_ NVARCHAR2(255),
    TENANT_ID_ NVARCHAR2(255) default '',
    primary key (ID_)
);

create table ACT_HI_VARINST (
    ID_ NVARCHAR2(64) not null,
    PROC_INST_ID_ NVARCHAR2(64),
    EXECUTION_ID_ NVARCHAR2(64),
    TASK_ID_ NVARCHAR2(64),
    NAME_ NVARCHAR2(255) not null,
    VAR_TYPE_ NVARCHAR2(100),
    REV_ INTEGER,
    BYTEARRAY_ID_ NVARCHAR2(64),
    DOUBLE_ NUMBER(*,10),
    LONG_ NUMBER(19,0),
    TEXT_ NVARCHAR2(2000),
    TEXT2_ NVARCHAR2(2000),
    CREATE_TIME_ TIMESTAMP(6),
    LAST_UPDATED_TIME_ TIMESTAMP(6),
    primary key (ID_)
);

create table ACT_HI_DETAIL (
    ID_ NVARCHAR2(64) not null,
    TYPE_ NVARCHAR2(255) not null,
    PROC_INST_ID_ NVARCHAR2(64),
    EXECUTION_ID_ NVARCHAR2(64),
    TASK_ID_ NVARCHAR2(64),
    ACT_INST_ID_ NVARCHAR2(64),
    NAME_ NVARCHAR2(255) not null,
    VAR_TYPE_ NVARCHAR2(64),
    REV_ INTEGER,
    TIME_ TIMESTAMP(6) not null,
    BYTEARRAY_ID_ NVARCHAR2(64),
    DOUBLE_ NUMBER(*,10),
    LONG_ NUMBER(19,0),
    TEXT_ NVARCHAR2(2000),
    TEXT2_ NVARCHAR2(2000),
    primary key (ID_)
);

create table ACT_HI_COMMENT (
    ID_ NVARCHAR2(64) not null,
    TYPE_ NVARCHAR2(255),
    TIME_ TIMESTAMP(6) not null,
    USER_ID_ NVARCHAR2(255),
    TASK_ID_ NVARCHAR2(64),
    PROC_INST_ID_ NVARCHAR2(64),
    ACTION_ NVARCHAR2(255),
    MESSAGE_ NVARCHAR2(2000),
    FULL_MSG_ BLOB,
    primary key (ID_)
);

create table ACT_HI_ATTACHMENT (
    ID_ NVARCHAR2(64) not null,
    REV_ INTEGER,
    USER_ID_ NVARCHAR2(255),
    NAME_ NVARCHAR2(255),
    DESCRIPTION_ NVARCHAR2(2000),
    TYPE_ NVARCHAR2(255),
    TASK_ID_ NVARCHAR2(64),
    PROC_INST_ID_ NVARCHAR2(64),
    URL_ NVARCHAR2(2000),
    CONTENT_ID_ NVARCHAR2(64),
    TIME_ TIMESTAMP(6),
    primary key (ID_)
);

create table ACT_HI_IDENTITYLINK (
    ID_ NVARCHAR2(64),
    GROUP_ID_ NVARCHAR2(255),
    TYPE_ NVARCHAR2(255),
    USER_ID_ NVARCHAR2(255),
    TASK_ID_ NVARCHAR2(64),
    PROC_INST_ID_ NVARCHAR2(64),
    primary key (ID_)
);

create index ACT_IDX_HI_PRO_INST_END on ACT_HI_PROCINST(END_TIME_);
create index ACT_IDX_HI_PRO_I_BUSKEY on ACT_HI_PROCINST(BUSINESS_KEY_);
create index ACT_IDX_HI_ACT_INST_START on ACT_HI_ACTINST(START_TIME_);
create index ACT_IDX_HI_ACT_INST_END on ACT_HI_ACTINST(END_TIME_);
create index ACT_IDX_HI_DETAIL_PROC_INST on ACT_HI_DETAIL(PROC_INST_ID_);
create index ACT_IDX_HI_DETAIL_ACT_INST on ACT_HI_DETAIL(ACT_INST_ID_);
create index ACT_IDX_HI_DETAIL_TIME on ACT_HI_DETAIL(TIME_);
create index ACT_IDX_HI_DETAIL_NAME on ACT_HI_DETAIL(NAME_);
create index ACT_IDX_HI_DETAIL_TASK_ID on ACT_HI_DETAIL(TASK_ID_);
create index ACT_IDX_HI_PROCVAR_PROC_INST on ACT_HI_VARINST(PROC_INST_ID_);
create index ACT_IDX_HI_PROCVAR_NAME_TYPE on ACT_HI_VARINST(NAME_, VAR_TYPE_);
create index ACT_IDX_HI_PROCVAR_TASK_ID on ACT_HI_VARINST(TASK_ID_);
create index ACT_IDX_HI_IDENT_LNK_USER on ACT_HI_IDENTITYLINK(USER_ID_);
create index ACT_IDX_HI_IDENT_LNK_TASK on ACT_HI_IDENTITYLINK(TASK_ID_);
create index ACT_IDX_HI_IDENT_LNK_PROCINST on ACT_HI_IDENTITYLINK(PROC_INST_ID_);

create index ACT_IDX_HI_ACT_INST_PROCINST on ACT_HI_ACTINST(PROC_INST_ID_, ACT_ID_);
create index ACT_IDX_HI_ACT_INST_EXEC on ACT_HI_ACTINST(EXECUTION_ID_, ACT_ID_);
create index ACT_IDX_HI_TASK_INST_PROCINST on ACT_HI_TASKINST(PROC_INST_ID_);

create table ACT_GE_PROPERTY (
    NAME_ NVARCHAR2(64),
    VALUE_ NVARCHAR2(300),
    REV_ INTEGER,
    primary key (NAME_)
);

insert into ACT_GE_PROPERTY
values ('schema.version', '6.0.0.4', 1);

insert into ACT_GE_PROPERTY
values ('schema.history', 'create(6.0.0.4)', 1);

insert into ACT_GE_PROPERTY
values ('next.dbid', '1', 1);

create table ACT_GE_BYTEARRAY (
    ID_ NVARCHAR2(64),
    REV_ INTEGER,
    NAME_ NVARCHAR2(255),
    DEPLOYMENT_ID_ NVARCHAR2(64),
    BYTES_ BLOB,
    GENERATED_ NUMBER(1,0) CHECK (GENERATED_ IN (1,0)),
    primary key (ID_)
);

create table ACT_RE_DEPLOYMENT (
    ID_ NVARCHAR2(64),
    NAME_ NVARCHAR2(255),
    CATEGORY_ NVARCHAR2(255),
    KEY_ NVARCHAR2(255),
    TENANT_ID_ NVARCHAR2(255) DEFAULT '',
    DEPLOY_TIME_ TIMESTAMP(6),
    ENGINE_VERSION_ NVARCHAR2(255),
    primary key (ID_)
);

create table ACT_RE_MODEL (
    ID_ NVARCHAR2(64) not null,
    REV_ INTEGER,
    NAME_ NVARCHAR2(255),
    KEY_ NVARCHAR2(255),
    CATEGORY_ NVARCHAR2(255),
    CREATE_TIME_ TIMESTAMP(6),
    LAST_UPDATE_TIME_ TIMESTAMP(6),
    VERSION_ INTEGER,
    META_INFO_ NVARCHAR2(2000),
    DEPLOYMENT_ID_ NVARCHAR2(64),
    EDITOR_SOURCE_VALUE_ID_ NVARCHAR2(64),
    EDITOR_SOURCE_EXTRA_VALUE_ID_ NVARCHAR2(64),
    TENANT_ID_ NVARCHAR2(255) DEFAULT '',
    primary key (ID_)
);

create table ACT_RU_EXECUTION (
    ID_ NVARCHAR2(64),
    REV_ INTEGER,
    PROC_INST_ID_ NVARCHAR2(64),
    BUSINESS_KEY_ NVARCHAR2(255),
    PARENT_ID_ NVARCHAR2(64),
    PROC_DEF_ID_ NVARCHAR2(64),
    SUPER_EXEC_ NVARCHAR2(64),
    ROOT_PROC_INST_ID_ NVARCHAR2(64),
    ACT_ID_ NVARCHAR2(255),
    IS_ACTIVE_ NUMBER(1,0) CHECK (IS_ACTIVE_ IN (1,0)),
    IS_CONCURRENT_ NUMBER(1,0) CHECK (IS_CONCURRENT_ IN (1,0)),
    IS_SCOPE_ NUMBER(1,0) CHECK (IS_SCOPE_ IN (1,0)),
    IS_EVENT_SCOPE_ NUMBER(1,0) CHECK (IS_EVENT_SCOPE_ IN (1,0)),
    IS_MI_ROOT_ NUMBER(1,0) CHECK (IS_MI_ROOT_ IN (1,0)),
    SUSPENSION_STATE_ INTEGER,
    CACHED_ENT_STATE_ INTEGER,
    TENANT_ID_ NVARCHAR2(255) DEFAULT '',
    NAME_ NVARCHAR2(255),
    START_TIME_ TIMESTAMP(6),
    START_USER_ID_ NVARCHAR2(255),
    LOCK_TIME_ TIMESTAMP(6),
    IS_COUNT_ENABLED_ NUMBER(1,0) CHECK (IS_COUNT_ENABLED_ IN (1,0)),
    EVT_SUBSCR_COUNT_ INTEGER,
    TASK_COUNT_ INTEGER,
    JOB_COUNT_ INTEGER,
    TIMER_JOB_COUNT_ INTEGER,
    SUSP_JOB_COUNT_ INTEGER,
    DEADLETTER_JOB_COUNT_ INTEGER,
    VAR_COUNT_ INTEGER,
    ID_LINK_COUNT_ INTEGER,
    primary key (ID_)
);

create table ACT_RU_JOB (
    ID_ NVARCHAR2(64) NOT NULL,
    REV_ INTEGER,
    TYPE_ NVARCHAR2(255) NOT NULL,
    LOCK_EXP_TIME_ TIMESTAMP(6),
    LOCK_OWNER_ NVARCHAR2(255),
    EXCLUSIVE_ NUMBER(1,0) CHECK (EXCLUSIVE_ IN (1,0)),
    EXECUTION_ID_ NVARCHAR2(64),
    PROCESS_INSTANCE_ID_ NVARCHAR2(64),
    PROC_DEF_ID_ NVARCHAR2(64),
    RETRIES_ INTEGER,
    EXCEPTION_STACK_ID_ NVARCHAR2(64),
    EXCEPTION_MSG_ NVARCHAR2(2000),
    DUEDATE_ TIMESTAMP(6),
    REPEAT_ NVARCHAR2(255),
    HANDLER_TYPE_ NVARCHAR2(255),
    HANDLER_CFG_ NVARCHAR2(2000),
    TENANT_ID_ NVARCHAR2(255) DEFAULT '',
    primary key (ID_)
);

create table ACT_RU_TIMER_JOB (
    ID_ NVARCHAR2(64) NOT NULL,
    REV_ INTEGER,
    TYPE_ NVARCHAR2(255) NOT NULL,
    LOCK_EXP_TIME_ TIMESTAMP(6),
    LOCK_OWNER_ NVARCHAR2(255),
    EXCLUSIVE_ NUMBER(1,0) CHECK (EXCLUSIVE_ IN (1,0)),
    EXECUTION_ID_ NVARCHAR2(64),
    PROCESS_INSTANCE_ID_ NVARCHAR2(64),
    PROC_DEF_ID_ NVARCHAR2(64),
    RETRIES_ INTEGER,
    EXCEPTION_STACK_ID_ NVARCHAR2(64),
    EXCEPTION_MSG_ NVARCHAR2(2000),
    DUEDATE_ TIMESTAMP(6),
    REPEAT_ NVARCHAR2(255),
    HANDLER_TYPE_ NVARCHAR2(255),
    HANDLER_CFG_ NVARCHAR2(2000),
    TENANT_ID_ NVARCHAR2(255) DEFAULT '',
    primary key (ID_)
);

create table ACT_RU_SUSPENDED_JOB (
    ID_ NVARCHAR2(64) NOT NULL,
    REV_ INTEGER,
    TYPE_ NVARCHAR2(255) NOT NULL,
    EXCLUSIVE_ NUMBER(1,0) CHECK (EXCLUSIVE_ IN (1,0)),
    EXECUTION_ID_ NVARCHAR2(64),
    PROCESS_INSTANCE_ID_ NVARCHAR2(64),
    PROC_DEF_ID_ NVARCHAR2(64),
    RETRIES_ INTEGER,
    EXCEPTION_STACK_ID_ NVARCHAR2(64),
    EXCEPTION_MSG_ NVARCHAR2(2000),
    DUEDATE_ TIMESTAMP(6),
    REPEAT_ NVARCHAR2(255),
    HANDLER_TYPE_ NVARCHAR2(255),
    HANDLER_CFG_ NVARCHAR2(2000),
    TENANT_ID_ NVARCHAR2(255) DEFAULT '',
    primary key (ID_)
);

create table ACT_RU_DEADLETTER_JOB (
    ID_ NVARCHAR2(64) NOT NULL,
    REV_ INTEGER,
    TYPE_ NVARCHAR2(255) NOT NULL,
    EXCLUSIVE_ NUMBER(1,0) CHECK (EXCLUSIVE_ IN (1,0)),
    EXECUTION_ID_ NVARCHAR2(64),
    PROCESS_INSTANCE_ID_ NVARCHAR2(64),
    PROC_DEF_ID_ NVARCHAR2(64),
    EXCEPTION_STACK_ID_ NVARCHAR2(64),
    EXCEPTION_MSG_ NVARCHAR2(2000),
    DUEDATE_ TIMESTAMP(6),
    REPEAT_ NVARCHAR2(255),
    HANDLER_TYPE_ NVARCHAR2(255),
    HANDLER_CFG_ NVARCHAR2(2000),
    TENANT_ID_ NVARCHAR2(255) DEFAULT '',
    primary key (ID_)
);

create table ACT_RE_PROCDEF (
    ID_ NVARCHAR2(64) NOT NULL,
    REV_ INTEGER,
    CATEGORY_ NVARCHAR2(255),
    NAME_ NVARCHAR2(255),
    KEY_ NVARCHAR2(255) NOT NULL,
    VERSION_ INTEGER NOT NULL,
    DEPLOYMENT_ID_ NVARCHAR2(64),
    RESOURCE_NAME_ NVARCHAR2(2000),
    DGRM_RESOURCE_NAME_ varchar(4000),
    DESCRIPTION_ NVARCHAR2(2000),
    HAS_START_FORM_KEY_ NUMBER(1,0) CHECK (HAS_START_FORM_KEY_ IN (1,0)),
    HAS_GRAPHICAL_NOTATION_ NUMBER(1,0) CHECK (HAS_GRAPHICAL_NOTATION_ IN (1,0)),
    SUSPENSION_STATE_ INTEGER,
    TENANT_ID_ NVARCHAR2(255) DEFAULT '',
    ENGINE_VERSION_ NVARCHAR2(255),
    primary key (ID_)
);

create table ACT_RU_TASK (
    ID_ NVARCHAR2(64),
    REV_ INTEGER,
    EXECUTION_ID_ NVARCHAR2(64),
    PROC_INST_ID_ NVARCHAR2(64),
    PROC_DEF_ID_ NVARCHAR2(64),
    NAME_ NVARCHAR2(255),
    PARENT_TASK_ID_ NVARCHAR2(64),
    DESCRIPTION_ NVARCHAR2(2000),
    TASK_DEF_KEY_ NVARCHAR2(255),
    OWNER_ NVARCHAR2(255),
    ASSIGNEE_ NVARCHAR2(255),
    DELEGATION_ NVARCHAR2(64),
    PRIORITY_ INTEGER,
    CREATE_TIME_ TIMESTAMP(6),
    DUE_DATE_ TIMESTAMP(6),
    CATEGORY_ NVARCHAR2(255),
    SUSPENSION_STATE_ INTEGER,
    TENANT_ID_ NVARCHAR2(255) DEFAULT '',
    FORM_KEY_ NVARCHAR2(255),
    CLAIM_TIME_ TIMESTAMP(6),
    primary key (ID_)
);

create table ACT_RU_IDENTITYLINK (
    ID_ NVARCHAR2(64),
    REV_ INTEGER,
    GROUP_ID_ NVARCHAR2(255),
    TYPE_ NVARCHAR2(255),
    USER_ID_ NVARCHAR2(255),
    TASK_ID_ NVARCHAR2(64),
    PROC_INST_ID_ NVARCHAR2(64),
    PROC_DEF_ID_ NVARCHAR2(64),
    primary key (ID_)
);

create table ACT_RU_VARIABLE (
    ID_ NVARCHAR2(64) not null,
    REV_ INTEGER,
    TYPE_ NVARCHAR2(255) not null,
    NAME_ NVARCHAR2(255) not null,
    EXECUTION_ID_ NVARCHAR2(64),
    PROC_INST_ID_ NVARCHAR2(64),
    TASK_ID_ NVARCHAR2(64),
    BYTEARRAY_ID_ NVARCHAR2(64),
    DOUBLE_ NUMBER(*,10),
    LONG_ NUMBER(19,0),
    TEXT_ NVARCHAR2(2000),
    TEXT2_ NVARCHAR2(2000),
    primary key (ID_)
);

create table ACT_RU_EVENT_SUBSCR (
    ID_ NVARCHAR2(64) not null,
    REV_ integer,
    EVENT_TYPE_ NVARCHAR2(255) not null,
    EVENT_NAME_ NVARCHAR2(255),
    EXECUTION_ID_ NVARCHAR2(64),
    PROC_INST_ID_ NVARCHAR2(64),
    ACTIVITY_ID_ NVARCHAR2(64),
    CONFIGURATION_ NVARCHAR2(255),
    CREATED_ TIMESTAMP(6) not null,
    PROC_DEF_ID_ NVARCHAR2(64),
    TENANT_ID_ NVARCHAR2(255) DEFAULT '',
    primary key (ID_)
);

create table ACT_EVT_LOG (
    LOG_NR_ NUMBER(19),
    TYPE_ NVARCHAR2(64),
    PROC_DEF_ID_ NVARCHAR2(64),
    PROC_INST_ID_ NVARCHAR2(64),
    EXECUTION_ID_ NVARCHAR2(64),
    TASK_ID_ NVARCHAR2(64),
    TIME_STAMP_ TIMESTAMP(6) not null,
    USER_ID_ NVARCHAR2(255),
    DATA_ BLOB,
    LOCK_OWNER_ NVARCHAR2(255),
    LOCK_TIME_ TIMESTAMP(6) null,
    IS_PROCESSED_ NUMBER(3) default 0,
    primary key (LOG_NR_)
);

create sequence act_evt_log_seq;

create table ACT_PROCDEF_INFO (
	ID_ NVARCHAR2(64) not null,
    PROC_DEF_ID_ NVARCHAR2(64) not null,
    REV_ integer,
    INFO_JSON_ID_ NVARCHAR2(64),
    primary key (ID_)
);

create index ACT_IDX_EXEC_BUSKEY on ACT_RU_EXECUTION(BUSINESS_KEY_);
create index ACT_IDX_EXEC_ROOT on ACT_RU_EXECUTION(ROOT_PROC_INST_ID_);
create index ACT_IDX_TASK_CREATE on ACT_RU_TASK(CREATE_TIME_);
create index ACT_IDX_IDENT_LNK_USER on ACT_RU_IDENTITYLINK(USER_ID_);
create index ACT_IDX_IDENT_LNK_GROUP on ACT_RU_IDENTITYLINK(GROUP_ID_);
create index ACT_IDX_EVENT_SUBSCR_CONFIG_ on ACT_RU_EVENT_SUBSCR(CONFIGURATION_);
create index ACT_IDX_VARIABLE_TASK_ID on ACT_RU_VARIABLE(TASK_ID_);

create index ACT_IDX_BYTEAR_DEPL on ACT_GE_BYTEARRAY(DEPLOYMENT_ID_);
alter table ACT_GE_BYTEARRAY
    add constraint ACT_FK_BYTEARR_DEPL
    foreign key (DEPLOYMENT_ID_)
    references ACT_RE_DEPLOYMENT (ID_);

alter table ACT_RE_PROCDEF
    add constraint ACT_UNIQ_PROCDEF
    unique (KEY_,VERSION_, TENANT_ID_);

create index ACT_IDX_EXE_PROCINST on ACT_RU_EXECUTION(PROC_INST_ID_);
alter table ACT_RU_EXECUTION
    add constraint ACT_FK_EXE_PROCINST
    foreign key (PROC_INST_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_EXE_PARENT on ACT_RU_EXECUTION(PARENT_ID_);
alter table ACT_RU_EXECUTION
    add constraint ACT_FK_EXE_PARENT
    foreign key (PARENT_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_EXE_SUPER on ACT_RU_EXECUTION(SUPER_EXEC_);
alter table ACT_RU_EXECUTION
    add constraint ACT_FK_EXE_SUPER
    foreign key (SUPER_EXEC_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_EXE_PROCDEF on ACT_RU_EXECUTION(PROC_DEF_ID_);
alter table ACT_RU_EXECUTION
    add constraint ACT_FK_EXE_PROCDEF
    foreign key (PROC_DEF_ID_)
    references ACT_RE_PROCDEF (ID_);

create index ACT_IDX_TSKASS_TASK on ACT_RU_IDENTITYLINK(TASK_ID_);
alter table ACT_RU_IDENTITYLINK
    add constraint ACT_FK_TSKASS_TASK
    foreign key (TASK_ID_)
    references ACT_RU_TASK (ID_);

create index ACT_IDX_ATHRZ_PROCEDEF  on ACT_RU_IDENTITYLINK(PROC_DEF_ID_);
alter table ACT_RU_IDENTITYLINK
    add constraint ACT_FK_ATHRZ_PROCEDEF
    foreign key (PROC_DEF_ID_)
    references ACT_RE_PROCDEF (ID_);

create index ACT_IDX_IDL_PROCINST on ACT_RU_IDENTITYLINK(PROC_INST_ID_);
alter table ACT_RU_IDENTITYLINK
    add constraint ACT_FK_IDL_PROCINST
    foreign key (PROC_INST_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_TASK_EXEC on ACT_RU_TASK(EXECUTION_ID_);
alter table ACT_RU_TASK
    add constraint ACT_FK_TASK_EXE
    foreign key (EXECUTION_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_TASK_PROCINST on ACT_RU_TASK(PROC_INST_ID_);
alter table ACT_RU_TASK
    add constraint ACT_FK_TASK_PROCINST
    foreign key (PROC_INST_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_TASK_PROCDEF on ACT_RU_TASK(PROC_DEF_ID_);
alter table ACT_RU_TASK
  add constraint ACT_FK_TASK_PROCDEF
  foreign key (PROC_DEF_ID_)
  references ACT_RE_PROCDEF (ID_);

create index ACT_IDX_VAR_EXE on ACT_RU_VARIABLE(EXECUTION_ID_);
alter table ACT_RU_VARIABLE
    add constraint ACT_FK_VAR_EXE
    foreign key (EXECUTION_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_VAR_PROCINST on ACT_RU_VARIABLE(PROC_INST_ID_);
alter table ACT_RU_VARIABLE
    add constraint ACT_FK_VAR_PROCINST
    foreign key (PROC_INST_ID_)
    references ACT_RU_EXECUTION(ID_);

create index ACT_IDX_VAR_BYTEARRAY on ACT_RU_VARIABLE(BYTEARRAY_ID_);
alter table ACT_RU_VARIABLE
    add constraint ACT_FK_VAR_BYTEARRAY
    foreign key (BYTEARRAY_ID_)
    references ACT_GE_BYTEARRAY (ID_);

create index ACT_IDX_JOB_EXECUTION_ID on ACT_RU_JOB(EXECUTION_ID_);
alter table ACT_RU_JOB
    add constraint ACT_FK_JOB_EXECUTION
    foreign key (EXECUTION_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_JOB_PROC_INST_ID on ACT_RU_JOB(PROCESS_INSTANCE_ID_);
alter table ACT_RU_JOB
    add constraint ACT_FK_JOB_PROCESS_INSTANCE
    foreign key (PROCESS_INSTANCE_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_JOB_PROC_DEF_ID on ACT_RU_JOB(PROC_DEF_ID_);
alter table ACT_RU_JOB
    add constraint ACT_FK_JOB_PROC_DEF
    foreign key (PROC_DEF_ID_)
    references ACT_RE_PROCDEF (ID_);

create index ACT_IDX_JOB_EXCEPTION on ACT_RU_JOB(EXCEPTION_STACK_ID_);
alter table ACT_RU_JOB
    add constraint ACT_FK_JOB_EXCEPTION
    foreign key (EXCEPTION_STACK_ID_)
    references ACT_GE_BYTEARRAY (ID_);

create index ACT_IDX_TJOB_EXECUTION_ID on ACT_RU_TIMER_JOB(EXECUTION_ID_);
alter table ACT_RU_TIMER_JOB
    add constraint ACT_FK_TJOB_EXECUTION
    foreign key (EXECUTION_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_TJOB_PROC_INST_ID on ACT_RU_TIMER_JOB(PROCESS_INSTANCE_ID_);
alter table ACT_RU_TIMER_JOB
    add constraint ACT_FK_TJOB_PROCESS_INSTANCE
    foreign key (PROCESS_INSTANCE_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_TJOB_PROC_DEF_ID on ACT_RU_TIMER_JOB(PROC_DEF_ID_);
alter table ACT_RU_TIMER_JOB
    add constraint ACT_FK_TJOB_PROC_DEF
    foreign key (PROC_DEF_ID_)
    references ACT_RE_PROCDEF (ID_);

create index ACT_IDX_TJOB_EXCEPTION on ACT_RU_TIMER_JOB(EXCEPTION_STACK_ID_);
alter table ACT_RU_TIMER_JOB
    add constraint ACT_FK_TJOB_EXCEPTION
    foreign key (EXCEPTION_STACK_ID_)
    references ACT_GE_BYTEARRAY (ID_);

create index ACT_IDX_SJOB_EXECUTION_ID on ACT_RU_SUSPENDED_JOB(EXECUTION_ID_);
alter table ACT_RU_SUSPENDED_JOB
    add constraint ACT_FK_SJOB_EXECUTION
    foreign key (EXECUTION_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_SJOB_PROC_INST_ID on ACT_RU_SUSPENDED_JOB(PROCESS_INSTANCE_ID_);
alter table ACT_RU_SUSPENDED_JOB
    add constraint ACT_FK_SJOB_PROCESS_INSTANCE
    foreign key (PROCESS_INSTANCE_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_SJOB_PROC_DEF_ID on ACT_RU_SUSPENDED_JOB(PROC_DEF_ID_);
alter table ACT_RU_SUSPENDED_JOB
    add constraint ACT_FK_SJOB_PROC_DEF
    foreign key (PROC_DEF_ID_)
    references ACT_RE_PROCDEF (ID_);

create index ACT_IDX_SJOB_EXCEPTION on ACT_RU_SUSPENDED_JOB(EXCEPTION_STACK_ID_);
alter table ACT_RU_SUSPENDED_JOB
    add constraint ACT_FK_SJOB_EXCEPTION
    foreign key (EXCEPTION_STACK_ID_)
    references ACT_GE_BYTEARRAY (ID_);

create index ACT_IDX_DJOB_EXECUTION_ID on ACT_RU_DEADLETTER_JOB(EXECUTION_ID_);
alter table ACT_RU_DEADLETTER_JOB
    add constraint ACT_FK_DJOB_EXECUTION
    foreign key (EXECUTION_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_DJOB_PROC_INST_ID on ACT_RU_DEADLETTER_JOB(PROCESS_INSTANCE_ID_);
alter table ACT_RU_DEADLETTER_JOB
    add constraint ACT_FK_DJOB_PROCESS_INSTANCE
    foreign key (PROCESS_INSTANCE_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_DJOB_PROC_DEF_ID on ACT_RU_DEADLETTER_JOB(PROC_DEF_ID_);
alter table ACT_RU_DEADLETTER_JOB
    add constraint ACT_FK_DJOB_PROC_DEF
    foreign key (PROC_DEF_ID_)
    references ACT_RE_PROCDEF (ID_);

create index ACT_IDX_DJOB_EXCEPTION on ACT_RU_DEADLETTER_JOB(EXCEPTION_STACK_ID_);
alter table ACT_RU_DEADLETTER_JOB
    add constraint ACT_FK_DJOB_EXCEPTION
    foreign key (EXCEPTION_STACK_ID_)
    references ACT_GE_BYTEARRAY (ID_);

create index ACT_IDX_EVENT_SUBSCR on ACT_RU_EVENT_SUBSCR(EXECUTION_ID_);
alter table ACT_RU_EVENT_SUBSCR
    add constraint ACT_FK_EVENT_EXEC
    foreign key (EXECUTION_ID_)
    references ACT_RU_EXECUTION(ID_);

create index ACT_IDX_MODEL_SOURCE on ACT_RE_MODEL(EDITOR_SOURCE_VALUE_ID_);
alter table ACT_RE_MODEL
    add constraint ACT_FK_MODEL_SOURCE
    foreign key (EDITOR_SOURCE_VALUE_ID_)
    references ACT_GE_BYTEARRAY (ID_);

create index ACT_IDX_MODEL_SOURCE_EXTRA on ACT_RE_MODEL(EDITOR_SOURCE_EXTRA_VALUE_ID_);
alter table ACT_RE_MODEL
    add constraint ACT_FK_MODEL_SOURCE_EXTRA
    foreign key (EDITOR_SOURCE_EXTRA_VALUE_ID_)
    references ACT_GE_BYTEARRAY (ID_);

create index ACT_IDX_MODEL_DEPLOYMENT on ACT_RE_MODEL(DEPLOYMENT_ID_);
alter table ACT_RE_MODEL
    add constraint ACT_FK_MODEL_DEPLOYMENT
    foreign key (DEPLOYMENT_ID_)
    references ACT_RE_DEPLOYMENT (ID_);

create index ACT_IDX_PROCDEF_INFO_JSON on ACT_PROCDEF_INFO(INFO_JSON_ID_);
alter table ACT_PROCDEF_INFO
    add constraint ACT_FK_INFO_JSON_BA
    foreign key (INFO_JSON_ID_)
    references ACT_GE_BYTEARRAY (ID_);

create index ACT_IDX_PROCDEF_INFO_PROC on ACT_PROCDEF_INFO(PROC_DEF_ID_);
alter table ACT_PROCDEF_INFO
    add constraint ACT_FK_INFO_PROCDEF
    foreign key (PROC_DEF_ID_)
    references ACT_RE_PROCDEF (ID_);

alter table ACT_PROCDEF_INFO
    add constraint ACT_UNIQ_INFO_PROCDEF
    unique (PROC_DEF_ID_);
